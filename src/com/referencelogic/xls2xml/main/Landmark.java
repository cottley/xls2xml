// Generated by delombok at Sat Oct 13 10:31:16 AST 2012
package com.referencelogic.xls2xml.main;

public class Landmark {
	protected String value;
	protected String id;
	protected String direction;
	protected String distance;
	protected String collectionType;
	protected String collectionId;
	protected String collectionIdentifier;
	protected String collectionSection;
	protected String collectionMaxBlankLines;
	protected String row;
	protected String col;
	protected String sheetNo;
	protected String parentLandmarkId;
	protected String substringSearch;
	protected String matchNumber;
	protected String ignoreCase;
	protected String ignoreWhitespaces;
	protected String ignoreChars;
	
	@java.lang.SuppressWarnings("all")
	public Landmark() {
	}
	
	@java.lang.SuppressWarnings("all")
	public String getValue() {
		return this.value;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getId() {
		return this.id;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getDirection() {
		return this.direction;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getDistance() {
		return this.distance;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCollectionType() {
		return this.collectionType;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCollectionId() {
		return this.collectionId;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCollectionIdentifier() {
		return this.collectionIdentifier;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCollectionSection() {
		return this.collectionSection;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCollectionMaxBlankLines() {
		return this.collectionMaxBlankLines;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getRow() {
		return this.row;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCol() {
		return this.col;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getSheetNo() {
		return this.sheetNo;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getParentLandmarkId() {
		return this.parentLandmarkId;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getSubstringSearch() {
		return this.substringSearch;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getMatchNumber() {
		return this.matchNumber;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getIgnoreCase() {
		return this.ignoreCase;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getIgnoreWhitespaces() {
		return this.ignoreWhitespaces;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getIgnoreChars() {
		return this.ignoreChars;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setValue(final String value) {
		this.value = value;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setId(final String id) {
		this.id = id;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setDirection(final String direction) {
		this.direction = direction;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setDistance(final String distance) {
		this.distance = distance;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCollectionType(final String collectionType) {
		this.collectionType = collectionType;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCollectionId(final String collectionId) {
		this.collectionId = collectionId;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCollectionIdentifier(final String collectionIdentifier) {
		this.collectionIdentifier = collectionIdentifier;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCollectionSection(final String collectionSection) {
		this.collectionSection = collectionSection;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCollectionMaxBlankLines(final String collectionMaxBlankLines) {
		this.collectionMaxBlankLines = collectionMaxBlankLines;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setRow(final String row) {
		this.row = row;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setCol(final String col) {
		this.col = col;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setSheetNo(final String sheetNo) {
		this.sheetNo = sheetNo;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setParentLandmarkId(final String parentLandmarkId) {
		this.parentLandmarkId = parentLandmarkId;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setSubstringSearch(final String substringSearch) {
		this.substringSearch = substringSearch;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setMatchNumber(final String matchNumber) {
		this.matchNumber = matchNumber;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setIgnoreCase(final String ignoreCase) {
		this.ignoreCase = ignoreCase;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setIgnoreWhitespaces(final String ignoreWhitespaces) {
		this.ignoreWhitespaces = ignoreWhitespaces;
	}
	
	@java.lang.SuppressWarnings("all")
	public void setIgnoreChars(final String ignoreChars) {
		this.ignoreChars = ignoreChars;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Landmark)) return false;
		final Landmark other = (Landmark)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$value = this.getValue();
		final java.lang.Object other$value = other.getValue();
		if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
		final java.lang.Object this$direction = this.getDirection();
		final java.lang.Object other$direction = other.getDirection();
		if (this$direction == null ? other$direction != null : !this$direction.equals(other$direction)) return false;
		final java.lang.Object this$distance = this.getDistance();
		final java.lang.Object other$distance = other.getDistance();
		if (this$distance == null ? other$distance != null : !this$distance.equals(other$distance)) return false;
		final java.lang.Object this$collectionType = this.getCollectionType();
		final java.lang.Object other$collectionType = other.getCollectionType();
		if (this$collectionType == null ? other$collectionType != null : !this$collectionType.equals(other$collectionType)) return false;
		final java.lang.Object this$collectionId = this.getCollectionId();
		final java.lang.Object other$collectionId = other.getCollectionId();
		if (this$collectionId == null ? other$collectionId != null : !this$collectionId.equals(other$collectionId)) return false;
		final java.lang.Object this$collectionIdentifier = this.getCollectionIdentifier();
		final java.lang.Object other$collectionIdentifier = other.getCollectionIdentifier();
		if (this$collectionIdentifier == null ? other$collectionIdentifier != null : !this$collectionIdentifier.equals(other$collectionIdentifier)) return false;
		final java.lang.Object this$collectionSection = this.getCollectionSection();
		final java.lang.Object other$collectionSection = other.getCollectionSection();
		if (this$collectionSection == null ? other$collectionSection != null : !this$collectionSection.equals(other$collectionSection)) return false;
		final java.lang.Object this$collectionMaxBlankLines = this.getCollectionMaxBlankLines();
		final java.lang.Object other$collectionMaxBlankLines = other.getCollectionMaxBlankLines();
		if (this$collectionMaxBlankLines == null ? other$collectionMaxBlankLines != null : !this$collectionMaxBlankLines.equals(other$collectionMaxBlankLines)) return false;
		final java.lang.Object this$row = this.getRow();
		final java.lang.Object other$row = other.getRow();
		if (this$row == null ? other$row != null : !this$row.equals(other$row)) return false;
		final java.lang.Object this$col = this.getCol();
		final java.lang.Object other$col = other.getCol();
		if (this$col == null ? other$col != null : !this$col.equals(other$col)) return false;
		final java.lang.Object this$sheetNo = this.getSheetNo();
		final java.lang.Object other$sheetNo = other.getSheetNo();
		if (this$sheetNo == null ? other$sheetNo != null : !this$sheetNo.equals(other$sheetNo)) return false;
		final java.lang.Object this$parentLandmarkId = this.getParentLandmarkId();
		final java.lang.Object other$parentLandmarkId = other.getParentLandmarkId();
		if (this$parentLandmarkId == null ? other$parentLandmarkId != null : !this$parentLandmarkId.equals(other$parentLandmarkId)) return false;
		final java.lang.Object this$substringSearch = this.getSubstringSearch();
		final java.lang.Object other$substringSearch = other.getSubstringSearch();
		if (this$substringSearch == null ? other$substringSearch != null : !this$substringSearch.equals(other$substringSearch)) return false;
		final java.lang.Object this$matchNumber = this.getMatchNumber();
		final java.lang.Object other$matchNumber = other.getMatchNumber();
		if (this$matchNumber == null ? other$matchNumber != null : !this$matchNumber.equals(other$matchNumber)) return false;
		final java.lang.Object this$ignoreCase = this.getIgnoreCase();
		final java.lang.Object other$ignoreCase = other.getIgnoreCase();
		if (this$ignoreCase == null ? other$ignoreCase != null : !this$ignoreCase.equals(other$ignoreCase)) return false;
		final java.lang.Object this$ignoreWhitespaces = this.getIgnoreWhitespaces();
		final java.lang.Object other$ignoreWhitespaces = other.getIgnoreWhitespaces();
		if (this$ignoreWhitespaces == null ? other$ignoreWhitespaces != null : !this$ignoreWhitespaces.equals(other$ignoreWhitespaces)) return false;
		final java.lang.Object this$ignoreChars = this.getIgnoreChars();
		final java.lang.Object other$ignoreChars = other.getIgnoreChars();
		if (this$ignoreChars == null ? other$ignoreChars != null : !this$ignoreChars.equals(other$ignoreChars)) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean canEqual(final java.lang.Object other) {
		return other instanceof Landmark;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		final java.lang.Object $value = this.getValue();
		result = result * PRIME + ($value == null ? 0 : $value.hashCode());
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 0 : $id.hashCode());
		final java.lang.Object $direction = this.getDirection();
		result = result * PRIME + ($direction == null ? 0 : $direction.hashCode());
		final java.lang.Object $distance = this.getDistance();
		result = result * PRIME + ($distance == null ? 0 : $distance.hashCode());
		final java.lang.Object $collectionType = this.getCollectionType();
		result = result * PRIME + ($collectionType == null ? 0 : $collectionType.hashCode());
		final java.lang.Object $collectionId = this.getCollectionId();
		result = result * PRIME + ($collectionId == null ? 0 : $collectionId.hashCode());
		final java.lang.Object $collectionIdentifier = this.getCollectionIdentifier();
		result = result * PRIME + ($collectionIdentifier == null ? 0 : $collectionIdentifier.hashCode());
		final java.lang.Object $collectionSection = this.getCollectionSection();
		result = result * PRIME + ($collectionSection == null ? 0 : $collectionSection.hashCode());
		final java.lang.Object $collectionMaxBlankLines = this.getCollectionMaxBlankLines();
		result = result * PRIME + ($collectionMaxBlankLines == null ? 0 : $collectionMaxBlankLines.hashCode());
		final java.lang.Object $row = this.getRow();
		result = result * PRIME + ($row == null ? 0 : $row.hashCode());
		final java.lang.Object $col = this.getCol();
		result = result * PRIME + ($col == null ? 0 : $col.hashCode());
		final java.lang.Object $sheetNo = this.getSheetNo();
		result = result * PRIME + ($sheetNo == null ? 0 : $sheetNo.hashCode());
		final java.lang.Object $parentLandmarkId = this.getParentLandmarkId();
		result = result * PRIME + ($parentLandmarkId == null ? 0 : $parentLandmarkId.hashCode());
		final java.lang.Object $substringSearch = this.getSubstringSearch();
		result = result * PRIME + ($substringSearch == null ? 0 : $substringSearch.hashCode());
		final java.lang.Object $matchNumber = this.getMatchNumber();
		result = result * PRIME + ($matchNumber == null ? 0 : $matchNumber.hashCode());
		final java.lang.Object $ignoreCase = this.getIgnoreCase();
		result = result * PRIME + ($ignoreCase == null ? 0 : $ignoreCase.hashCode());
		final java.lang.Object $ignoreWhitespaces = this.getIgnoreWhitespaces();
		result = result * PRIME + ($ignoreWhitespaces == null ? 0 : $ignoreWhitespaces.hashCode());
		final java.lang.Object $ignoreChars = this.getIgnoreChars();
		result = result * PRIME + ($ignoreChars == null ? 0 : $ignoreChars.hashCode());
		return result;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Landmark(value=" + this.getValue() + ", id=" + this.getId() + ", direction=" + this.getDirection() + ", distance=" + this.getDistance() + ", collectionType=" + this.getCollectionType() + ", collectionId=" + this.getCollectionId() + ", collectionIdentifier=" + this.getCollectionIdentifier() + ", collectionSection=" + this.getCollectionSection() + ", collectionMaxBlankLines=" + this.getCollectionMaxBlankLines() + ", row=" + this.getRow() + ", col=" + this.getCol() + ", sheetNo=" + this.getSheetNo() + ", parentLandmarkId=" + this.getParentLandmarkId() + ", substringSearch=" + this.getSubstringSearch() + ", matchNumber=" + this.getMatchNumber() + ", ignoreCase=" + this.getIgnoreCase() + ", ignoreWhitespaces=" + this.getIgnoreWhitespaces() + ", ignoreChars=" + this.getIgnoreChars() + ")";
	}
}